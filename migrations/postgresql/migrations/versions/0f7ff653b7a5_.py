"""empty message

Revision ID: 0f7ff653b7a5
Revises: 
Create Date: 2019-10-28 16:09:32.815238

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0f7ff653b7a5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('short_rating', sa.Float(), nullable=False),
    sa.Column('short_intermediate_rating', sa.Float(), nullable=False),
    sa.Column('intermediate_rating', sa.Float(), nullable=False),
    sa.Column('super_speedway_rating', sa.Float(), nullable=False),
    sa.Column('restricted_track_rating', sa.Float(), nullable=False),
    sa.Column('road_course_rating', sa.Float(), nullable=False),
    sa.Column('overall_rating', sa.Float(), nullable=False),
    sa.Column('potential', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_driver_name'), 'driver', ['name'], unique=False)
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('owner', sa.String(length=32), nullable=True),
    sa.Column('car_manufacturer', sa.String(length=32), nullable=True),
    sa.Column('equipment_rating', sa.Float(), nullable=False),
    sa.Column('personnel_rating', sa.Float(), nullable=False),
    sa.Column('team_performance', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_name'), 'team', ['name'], unique=False)
    op.create_index(op.f('ix_team_owner'), 'team', ['owner'], unique=False)
    op.create_table('track',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('type', sa.String(length=32), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_track_name'), 'track', ['name'], unique=True)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('type', sa.String(length=16), nullable=True),
    sa.Column('track_id', sa.Integer(), nullable=True),
    sa.Column('laps', sa.Integer(), nullable=True),
    sa.Column('stages', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('race_processed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['track_id'], ['track.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_name'), 'schedule', ['name'], unique=False)
    op.create_table('team_cars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('car_number', sa.Integer(), nullable=True),
    sa.Column('series', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_cars_series'), 'team_cars', ['series'], unique=False)
    op.create_table('team_drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('series', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_drivers_series'), 'team_drivers', ['series'], unique=False)
    op.create_table('team_rentals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('equipment_bonus', sa.Integer(), nullable=True),
    sa.Column('from_id', sa.Integer(), nullable=True),
    sa.Column('to_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['from_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['to_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('qualifying_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('fastest_lap', sa.Float(), nullable=True),
    sa.Column('range_hits', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['schedule.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualifying_results_fastest_lap'), 'qualifying_results', ['fastest_lap'], unique=False)
    op.create_index(op.f('ix_qualifying_results_position'), 'qualifying_results', ['position'], unique=False)
    op.create_table('race_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('laps_led', sa.Integer(), nullable=True),
    sa.Column('fastest_lap', sa.Float(), nullable=True),
    sa.Column('range_hits', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['schedule.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_race_results_fastest_lap'), 'race_results', ['fastest_lap'], unique=False)
    op.create_index(op.f('ix_race_results_laps_led'), 'race_results', ['laps_led'], unique=False)
    op.create_index(op.f('ix_race_results_position'), 'race_results', ['position'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_race_results_position'), table_name='race_results')
    op.drop_index(op.f('ix_race_results_laps_led'), table_name='race_results')
    op.drop_index(op.f('ix_race_results_fastest_lap'), table_name='race_results')
    op.drop_table('race_results')
    op.drop_index(op.f('ix_qualifying_results_position'), table_name='qualifying_results')
    op.drop_index(op.f('ix_qualifying_results_fastest_lap'), table_name='qualifying_results')
    op.drop_table('qualifying_results')
    op.drop_table('team_rentals')
    op.drop_index(op.f('ix_team_drivers_series'), table_name='team_drivers')
    op.drop_table('team_drivers')
    op.drop_index(op.f('ix_team_cars_series'), table_name='team_cars')
    op.drop_table('team_cars')
    op.drop_index(op.f('ix_schedule_name'), table_name='schedule')
    op.drop_table('schedule')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_track_name'), table_name='track')
    op.drop_table('track')
    op.drop_index(op.f('ix_team_owner'), table_name='team')
    op.drop_index(op.f('ix_team_name'), table_name='team')
    op.drop_table('team')
    op.drop_index(op.f('ix_driver_name'), table_name='driver')
    op.drop_table('driver')
    # ### end Alembic commands ###
